
COMPUTATIONS + BLOCKCHAIN:

  after swap:
    - clear inputs?
    - update pair_info(s) of the pairs in the current route
    - update user balances

  - when it retrieves the routes, it does not update the screen, even if there
      is something on the textbox. only after typing some more

  - it is choosing a route with bad price impact, after adding liquidity

  /- implement basic routing
  - update price/rate periodically

    get_route(token1, token2, amount, callback)

  - auto-router on a smart contract (?) - for speed - test

  - when adding liquidity and going to swap, it does not recognize the current pair

  - when selecting an account: does not need to reload tokens if it is from the same network/chainId
  - allow to select another account?

  - subscribe to events from the current selected token pair contract(s)
  - when a token is selected, unsubscribe, subscribe to a new pair (if some), and request pair info
    if using a multi-hop route, subscribe to each contract on the route/path
    if using many / split routes, subscribe to each contract on all the paths

  - use separate js files - with require or import
    "cat a.js b.js > concat.js && browserify concat.js -o bundle.js && rm concat.js"

  - filter out ASLPT tokens

  - deploy new waergo, use the new waergo address here and on the factory (set_config or on new factory)
  - update on ARC1: add field for additional info? is it required? useful?

  - make aergo/waergo be the base token on new_pair (?) (on contract)

  - after adding each token to liquidity or undo or removing liquidity or swapping: update balances

  /- ability to select AERGO token

  - the tokens cannot be the same

  - test with tokens with different decimals


  /- load_user_pools()
  /- create and send txns

  /- pair.reserves

  /- calculate min_output using slippage -> already calculated, use the value on the txn
  - check/enhance calculations for swap, 
  /- use values on txn  (token_amount, min_output, exact_output)




FRONTEND + UI:

  confirmation dialogs:
  - swap confirmation dialog     id="confirm-swap"
  - transaction sent dialog      id="confirm-transaction"
  - add liquidity confirmation   id="confirm-add-liquidity"
  - success & failure dialog     id="popup-message"
  - general message dialog (replace swal?)

  - let the 2nd token unchosen - use text 'select token' and different color for button

  - display the price impact value (in percent) next to the output value
    use different colors for the label, depending on the impact value

  - capture slippage when typed on the config page

  - on token selection, enable the "common base" buttons above


  - multi-language
      the placement of token symbol in the sentence can vary, so use {1} or %1 to represent
      the place to put variables



  - show only 1 WAERGO token contract? use curated list of tokens?

  - store images/token logos on another place




//  √  if the pair is AERGO-WAERGO then just wrap/unwrap (on the swap)
//  √  and do not allow to create a pair

// if one of the tokens is AERGO, then it must use the waergo contract when:
// - making a swap
// - adding liquidity

// when creating a pair, if one is AERGO, use WAERGO as the token



TESTS:

  - test with the swap factory:
    - create pair
    - add liquidity
    - undo add first token
    - increase liquidity
    - remove liquidity
    - swap
    - routes

